#!/bin/bash

# ERPNext 14+ install script with menu, IP detection, domain prompt,
# password generation, and .env output.
# Author: itcxua
# Version: 2.1

set -e  # –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏ –ø–µ—Ä—à—ñ–π –ø–æ–º–∏–ª—Ü—ñ

# === –§—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è ===
gen_passwd() {
  local length=$1  # –¥–æ–≤–∂–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
  local charset="$2"  # –Ω–∞–±—ñ—Ä —Å–∏–º–≤–æ–ª—ñ–≤
  local max_attempts=${3:-5}  # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø—Ä–æ–±, –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 5
  local password=""
  local attempts=0

  while [ ${#password} -lt "$length" ] && [ $attempts -lt $max_attempts ]; do
    password=$(echo "$password""$(head -c 100 /dev/urandom | LC_ALL=C tr -dc "$charset")" | fold -w "$length" | head -n 1)
    attempts=$((attempts + 1))
  done

  if [ ${#password} -lt "$length" ]; then
    echo "‚ùå Error: Failed to generate secure password." >&2
    exit 1
  fi

  echo "$password"
}

# === –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ—ó IP-–∞–¥—Ä–µ—Å–∏ —Å–µ—Ä–≤–µ—Ä–∞ ===
IP_ADDRESS=$(hostname -I | awk '{print $1}')

# === –ó–∞–ø–∏—Ç –¥–æ–º–µ–Ω—É (—è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ ‚Äî –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è IP) ===
echo "üåê Enter domain name (leave empty to use IP: $IP_ADDRESS):"
read -p "Domain: " DOMAIN
# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É –¥–æ–º–µ–Ω—É (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤—ñ–Ω –Ω–µ IP)
if [[ -n "$DOMAIN" && ! "$DOMAIN" =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
  echo "‚ùå Invalid domain format. Falling back to IP: $IP_ADDRESS"
  DOMAIN="$IP_ADDRESS"
else
  DOMAIN=${DOMAIN:-$IP_ADDRESS}
fi

# === –ó–∞–ø–∏—Ç email-–∞–¥—Ä–µ—Å–∏ (–∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º) ===
default_email="admin@$DOMAIN"
echo "üìß Do you want to use default email ($default_email)? [Y/n]"
read -p "Answer: " email_choice
if [[ "$email_choice" =~ ^([nN])$ ]]; then
  read -p "Enter your email: " EMAIL
else
  EMAIL="$default_email"
fi

# === –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–∞—Ä–æ–ª—ñ–≤ –¥–ª—è –±–∞–∑–∏ —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ===
SHUF=$(shuf -i 25-29 -n 1)  # –≤–∏–ø–∞–¥–∫–æ–≤–∞ –¥–æ–≤–∂–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
DB_PASS=$(gen_passwd "$SHUF" "a-zA-Z0-9")
ADMIN_PASS=$(gen_passwd 12 "a-zA-Z0-9")

# === –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞/—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è .env ===
mkdir -p /opt

# === –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –≤ .env —Ñ–∞–π–ª ===
cat <<EOF > /opt/erpnext_install.env
DOMAIN=$DOMAIN
IP_ADDRESS=$IP_ADDRESS
EMAIL=$EMAIL
DB_PASS=$DB_PASS
ADMIN_PASS=$ADMIN_PASS
EOF

# === –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ ===
echo "üì¶ Updating system..."
apt update && apt upgrade -y

# === –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π ===
echo "üß∞ Installing dependencies..."
DEPENDENCIES=(
  python3-dev python3-setuptools python3-pip python3-distutils
  redis-server mariadb-server mariadb-client software-properties-common
  nginx curl supervisor certbot python3-certbot-nginx git xvfb
  libfontconfig wkhtmltopdf libxrender1 libxext6 libxrandr2 libfreetype6
  libx11-6 libxcomposite1 libxcursor1 libxdamage1 libxi6 libxtst6
  libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libdbus-1-3
)
apt install -y "${DEPENDENCIES[@]}"

# === –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Node.js 16 LTS ===
echo "üß∞ Installing Node.js 16 LTS..."
curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
apt install -y nodejs

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è MariaDB –¥–ª—è ERPNext ===
echo "üêò Configuring MariaDB..."
systemctl enable mariadb
systemctl start mariadb

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MariaDB
if ! mysqladmin ping -u root --silent; then
  echo "‚ùå Error: Unable to connect to MariaDB as root."
  exit 1
fi

mysql -u root <<EOF
SET GLOBAL innodb_file_format = BARRACUDA;
SET GLOBAL innodb_file_per_table = ON;
SET GLOBAL innodb_large_prefix = ON;
CREATE DATABASE IF NOT EXISTS erpnext;
EOF

# === –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Bench CLI ===
echo "üîß Installing bench CLI..."
if ! pip3 install frappe-bench; then
  echo "‚ùå Failed to install frappe-bench. Consider checking pip or using virtualenv."
  exit 1
fi

# === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Bench —Ç–∞ Frappe ===
echo "üìÅ Initializing bench & Frappe"
mkdir -p /opt/erpnext
cd /opt/erpnext

FRAPPE_BRANCH=version-14
bench init frappe-bench --frappe-branch $FRAPPE_BRANCH
cd frappe-bench

# === –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ERPNext —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–π—Ç—É ===
echo "üì¶ Getting ERPNext app..."
bench get-app erpnext --branch $FRAPPE_BRANCH

# –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–π—Ç—É
if ! bench new-site "$DOMAIN" --admin-password "$ADMIN_PASS" --mariadb-root-password "$DB_PASS"; then
  echo "‚ùå Failed to create new ERPNext site. Please check MariaDB password or logs."
  exit 1
fi

# –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ERPNext –¥–æ–¥–∞—Ç–∫—É
if ! bench --site "$DOMAIN" install-app erpnext; then
  echo "‚ùå Failed to install ERPNext app."
  exit 1
fi

# === –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ production —Ä–µ–∂–∏–º—É ===
echo "üîÅ Setting up production environment..."
if ! supervisorctl status | grep -q "frappe-bench-web"; then
  bench setup production $(whoami) --yes
else
  echo "‚úÖ Production mode already configured. Skipping setup."
fi

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Nginx ===
echo "üåê Configuring Nginx..."
bench setup nginx
ln -s `pwd`/config/nginx.conf /etc/nginx/sites-enabled/erpnext
nginx -t && systemctl reload nginx

# === –û—Ç—Ä–∏–º–∞–Ω–Ω—è SSL-—Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∞ –≤—ñ–¥ Let's Encrypt ===
echo "üîê Obtaining SSL certificate..."
if ! certbot certificates | grep -q "Domains: $DOMAIN"; then
  certbot --nginx -d $DOMAIN --non-interactive --agree-tos -m $EMAIL
  echo "üìÅ SSL directory: /etc/letsencrypt/live/$DOMAIN" >> /opt/erpnext_install.env
else
  echo "üîê SSL already exists for $DOMAIN. Skipping issuance."
fi

# === –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è: –≤–∏–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–æ—Å—Ç—É–ø—É ===
echo "‚úÖ ERPNext successfully installed!"
echo "============================================="
echo "üîó Access: https://$DOMAIN"
echo "üìÑ .env saved to: /opt/erpnext_install.env"
echo "üìß Email used: $EMAIL"
echo "üîê DB Password: $DB_PASS"
echo "üîê Admin Password: $ADMIN_PASS"
echo "üîê SSL path: /etc/letsencrypt/live/$DOMAIN"
echo "============================================="
